{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGhostTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805461ff01600160b01b031916757109709ecfa91a80626ff3989d68f67f5b1dd12d000117905534801561003957600080fd5b50610d80806100496000396000f3fe6080604052600436106100405760003560e01c80630a9254e414610049578063ba414fa61461005e578063e4e1a36d14610091578063fa7626d4146100a657005b3661004757005b005b34801561005557600080fd5b506100476100c0565b34801561006a57600080fd5b5060005461007d90610100900460ff1681565b604051901515815260200160405180910390f35b34801561009d57600080fd5b506100476101c7565b3480156100b257600080fd5b5060005461007d9060ff1681565b6040516100cc906104fa565b604051809103906000f0801580156100e8573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b039290921691909117905560405161011590610507565b604051809103906000f080158015610131573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b0392831617905560005460015460405163c88a5e6d60e01b815290831660048201526f4b3b4ca85a86c47a098a223fffffffff6024820152620100009091049091169063c88a5e6d90604401600060405180830381600087803b1580156101ad57600080fd5b505af11580156101c1573d6000803e3d6000fd5b50505050565b6101d03061048e565b60405163011d158760e31b81526020600482015260e260248201527f307837663031306137643635303030303030303030303030303030303030303060448201527f303030306234633739646162386632353963376165653665356232616137323960648201527f383231383630303035323766383634323237653834303030303030303030303060848201527f303030303030303030303030303030303030303030303030303030303030303060a48201527f303030303030303030303030363032303532363430303030303032373130363060c48201527f343035323630303038303630363036303030383035413733623463373964616260e48201527f386632353963376165653665356232616137323938323138363432323765383461010482015261663160f01b610124820152479060009073__$22982fc687951db1fe675dc229793b2671$__906308e8ac389061014401600060405180830381865af4158015610344573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261036c9190810190610556565b6001546040516344cb356d60e11b81529192506000916001600160a01b03909116906389966ada906103a2908590600401610603565b6020604051808303816000875af11580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610636565b90508061042b5760405162461bcd60e51b815260206004820152600f60248201526e11da1bdcdd081d1e0819985a5b1959608a1b60448201526064015b60405180910390fd5b478381116101c15760405162461bcd60e51b815260206004820152602a60248201527f706f737442616c616e6365206973206e6f742067726561746572207468616e2060448201526970726542616c616e636560b01b6064820152608401610422565b6040516001600160a01b03821660248201526104d69060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526104d9565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6105f18061066083390190565b61012380610c5183390190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561054557818101518382015260200161052d565b838111156101c15750506000910152565b60006020828403121561056857600080fd5b815167ffffffffffffffff8082111561058057600080fd5b818401915084601f83011261059457600080fd5b8151818111156105a6576105a6610514565b604051601f8201601f19908116603f011681019083821181831017156105ce576105ce610514565b816040528281528760208487010111156105e757600080fd5b6105f883602083016020880161052a565b979650505050505050565b602081526000825180602084015261062281604085016020870161052a565b601f01601f19169190910160400192915050565b60006020828403121561064857600080fd5b8151801515811461065857600080fd5b939250505056fe608060405234801561001057600080fd5b506105d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634b43f8381461005c57806356a8893c14610099578063593b79fe146100b957806389966ada146100eb578063af19752e1461010e575b600080fd5b60408051808201825260608082526020918201528151808301909252600082526080908201525b6040516100909190610255565b60405180910390f35b6100ac6100a7366004610429565b610121565b60405161009091906104a0565b6100ac6100c73660046104ba565b604080516001600160a01b0392909216600560a21b18601483015260348201905290565b6100fe6100f93660046104d5565b610199565b6040519015158152602001610090565b61008361011c366004610517565b6101ac565b604080516001600160a01b038516600560a21b1860148201526034810190915260609060009061015690858560548301610580565b60405160208183030381529060405290508060405160200161017891906105a8565b60408051808303601f19019052600082526020820190529695505050505050565b600081836000f050600160005260206000f35b604080518082019091526060808252602082015283516040516101d6919085908590602001610580565b60408051808303601f190181529190528452506020830180519190910190525090565b60005b838110156102145781810151838201526020016101fc565b83811115610223576000848401525b50505050565b600081518084526102418160208601602086016101f9565b601f01601f19169290920160200192915050565b6020815260008251604060208401526102716060840182610229565b90506020840151601f1984830301604085015261028e8282610229565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126102be57600080fd5b813567ffffffffffffffff808211156102d9576102d9610297565b604051601f8301601f19908116603f0116810190828211818310171561030157610301610297565b8160405283815286602085880101111561031a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006040828403121561034c57600080fd5b6040516040810167ffffffffffffffff828210818311171561037057610370610297565b81604052829350843591508082111561038857600080fd5b610394868387016102ad565b835260208501359150808211156103aa57600080fd5b506103b7858286016102ad565b6020830152505092915050565b80356001600160a01b03811681146103db57600080fd5b919050565b60008083601f8401126103f257600080fd5b50813567ffffffffffffffff81111561040a57600080fd5b60208301915083602082850101111561042257600080fd5b9250929050565b6000806000806060858703121561043f57600080fd5b843567ffffffffffffffff8082111561045757600080fd5b6104638883890161033a565b9550610471602088016103c4565b9450604087013591508082111561048757600080fd5b50610494878288016103e0565b95989497509550505050565b6020815260006104b36020830184610229565b9392505050565b6000602082840312156104cc57600080fd5b6104b3826103c4565b600080602083850312156104e857600080fd5b823567ffffffffffffffff8111156104ff57600080fd5b61050b858286016103e0565b90969095509350505050565b60008060006040848603121561052c57600080fd5b833567ffffffffffffffff8082111561054457600080fd5b6105508783880161033a565b9450602086013591508082111561056657600080fd5b50610573868287016103e0565b9497909650939450505050565b600084516105928184602089016101f9565b8201838582376000930192835250909392505050565b600082516105ba8184602087016101f9565b919091019291505056fea164736f6c634300080c000a608060405234801561001057600080fd5b50610103806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063010a7d6514603757806367e404ce146048575b600080fd5b6046604236600460c0565b6076565b005b600054605a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600080546001600160a01b031916331781556040516001600160a01b0384169183156108fc02918491818181858888f1935050505015801560bb573d6000803e3d6000fd5b505050565b6000806040838503121560d257600080fd5b82356001600160a01b038116811460e857600080fd5b94602093909301359350505056fea164736f6c634300080c000aa164736f6c634300080c000a",
    "sourceMap": "321:2626:2:-:0;;;1610:26:5;;;-1:-1:-1;;;;;;356:48:2;;;;;321:2626;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "/Users/offshore/kit/Ghost-Contract/src/test/utils/Utils.sol": {
        "utils": [
          {
            "start": 850,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100405760003560e01c80630a9254e414610049578063ba414fa61461005e578063e4e1a36d14610091578063fa7626d4146100a657005b3661004757005b005b34801561005557600080fd5b506100476100c0565b34801561006a57600080fd5b5060005461007d90610100900460ff1681565b604051901515815260200160405180910390f35b34801561009d57600080fd5b506100476101c7565b3480156100b257600080fd5b5060005461007d9060ff1681565b6040516100cc906104fa565b604051809103906000f0801580156100e8573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b039290921691909117905560405161011590610507565b604051809103906000f080158015610131573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b0392831617905560005460015460405163c88a5e6d60e01b815290831660048201526f4b3b4ca85a86c47a098a223fffffffff6024820152620100009091049091169063c88a5e6d90604401600060405180830381600087803b1580156101ad57600080fd5b505af11580156101c1573d6000803e3d6000fd5b50505050565b6101d03061048e565b60405163011d158760e31b81526020600482015260e260248201527f307837663031306137643635303030303030303030303030303030303030303060448201527f303030306234633739646162386632353963376165653665356232616137323960648201527f383231383630303035323766383634323237653834303030303030303030303060848201527f303030303030303030303030303030303030303030303030303030303030303060a48201527f303030303030303030303030363032303532363430303030303032373130363060c48201527f343035323630303038303630363036303030383035413733623463373964616260e48201527f386632353963376165653665356232616137323938323138363432323765383461010482015261663160f01b610124820152479060009073__$22982fc687951db1fe675dc229793b2671$__906308e8ac389061014401600060405180830381865af4158015610344573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261036c9190810190610556565b6001546040516344cb356d60e11b81529192506000916001600160a01b03909116906389966ada906103a2908590600401610603565b6020604051808303816000875af11580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610636565b90508061042b5760405162461bcd60e51b815260206004820152600f60248201526e11da1bdcdd081d1e0819985a5b1959608a1b60448201526064015b60405180910390fd5b478381116101c15760405162461bcd60e51b815260206004820152602a60248201527f706f737442616c616e6365206973206e6f742067726561746572207468616e2060448201526970726542616c616e636560b01b6064820152608401610422565b6040516001600160a01b03821660248201526104d69060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526104d9565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6105f18061066083390190565b61012380610c5183390190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561054557818101518382015260200161052d565b838111156101c15750506000910152565b60006020828403121561056857600080fd5b815167ffffffffffffffff8082111561058057600080fd5b818401915084601f83011261059457600080fd5b8151818111156105a6576105a6610514565b604051601f8201601f19908116603f011681019083821181831017156105ce576105ce610514565b816040528281528760208487010111156105e757600080fd5b6105f883602083016020880161052a565b979650505050505050565b602081526000825180602084015261062281604085016020870161052a565b601f01601f19169190910160400192915050565b60006020828403121561064857600080fd5b8151801515811461065857600080fd5b939250505056fe608060405234801561001057600080fd5b506105d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634b43f8381461005c57806356a8893c14610099578063593b79fe146100b957806389966ada146100eb578063af19752e1461010e575b600080fd5b60408051808201825260608082526020918201528151808301909252600082526080908201525b6040516100909190610255565b60405180910390f35b6100ac6100a7366004610429565b610121565b60405161009091906104a0565b6100ac6100c73660046104ba565b604080516001600160a01b0392909216600560a21b18601483015260348201905290565b6100fe6100f93660046104d5565b610199565b6040519015158152602001610090565b61008361011c366004610517565b6101ac565b604080516001600160a01b038516600560a21b1860148201526034810190915260609060009061015690858560548301610580565b60405160208183030381529060405290508060405160200161017891906105a8565b60408051808303601f19019052600082526020820190529695505050505050565b600081836000f050600160005260206000f35b604080518082019091526060808252602082015283516040516101d6919085908590602001610580565b60408051808303601f190181529190528452506020830180519190910190525090565b60005b838110156102145781810151838201526020016101fc565b83811115610223576000848401525b50505050565b600081518084526102418160208601602086016101f9565b601f01601f19169290920160200192915050565b6020815260008251604060208401526102716060840182610229565b90506020840151601f1984830301604085015261028e8282610229565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126102be57600080fd5b813567ffffffffffffffff808211156102d9576102d9610297565b604051601f8301601f19908116603f0116810190828211818310171561030157610301610297565b8160405283815286602085880101111561031a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006040828403121561034c57600080fd5b6040516040810167ffffffffffffffff828210818311171561037057610370610297565b81604052829350843591508082111561038857600080fd5b610394868387016102ad565b835260208501359150808211156103aa57600080fd5b506103b7858286016102ad565b6020830152505092915050565b80356001600160a01b03811681146103db57600080fd5b919050565b60008083601f8401126103f257600080fd5b50813567ffffffffffffffff81111561040a57600080fd5b60208301915083602082850101111561042257600080fd5b9250929050565b6000806000806060858703121561043f57600080fd5b843567ffffffffffffffff8082111561045757600080fd5b6104638883890161033a565b9550610471602088016103c4565b9450604087013591508082111561048757600080fd5b50610494878288016103e0565b95989497509550505050565b6020815260006104b36020830184610229565b9392505050565b6000602082840312156104cc57600080fd5b6104b3826103c4565b600080602083850312156104e857600080fd5b823567ffffffffffffffff8111156104ff57600080fd5b61050b858286016103e0565b90969095509350505050565b60008060006040848603121561052c57600080fd5b833567ffffffffffffffff8082111561054457600080fd5b6105508783880161033a565b9450602086013591508082111561056657600080fd5b50610573868287016103e0565b9497909650939450505050565b600084516105928184602089016101f9565b8201838582376000930192835250909392505050565b600082516105ba8184602087016101f9565b919091019291505056fea164736f6c634300080c000a608060405234801561001057600080fd5b50610103806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063010a7d6514603757806367e404ce146048575b600080fd5b6046604236600460c0565b6076565b005b600054605a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600080546001600160a01b031916331781556040516001600160a01b0384169183156108fc02918491818181858888f1935050505015801560bb573d6000803e3d6000fd5b505050565b6000806040838503121560d257600080fd5b82356001600160a01b038116811460e857600080fd5b94602093909301359350505056fea164736f6c634300080c000aa164736f6c634300080c000a",
    "sourceMap": "321:2626:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;521:172;;;;;;;;;;;;;:::i;1643:18:5:-;;;;;;;;;;-1:-1:-1;1643:18:5;;;;;;;;;;;;;;179:14:6;;172:22;154:41;;142:2;127:18;1643::5;;;;;;;770:2175:2;;;;;;;;;;;;;:::i;1610:26:5:-;;;;;;;;;;-1:-1:-1;1610:26:5;;;;;;;;521:172:2;563:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:5:2;:19;;-1:-1:-1;;;;;;555:19:2;-1:-1:-1;;;;;555:19:2;;;;;;;;;;593:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;584:6:2;:21;;-1:-1:-1;;;;;;584:21:2;-1:-1:-1;;;;;584:21:2;;;;;;-1:-1:-1;615:10:2;-1:-1:-1;639:5:2;615:71;;-1:-1:-1;;;615:71:2;;639:5;;;615:71;;;425:51:6;647:38:2;492:18:6;;;485:34;615:10:2;;;;;;;;:15;;398:18:6;;615:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;521:172::o;770:2175::-;819:33;846:4;819:18;:33::i;:::-;1571:271;;-1:-1:-1;;;1571:271:2;;740:2:6;1571:271:2;;;722:21:6;779:3;759:18;;;752:31;819:34;799:18;;;792:62;890:34;870:18;;;863:62;962:34;941:19;;;934:63;1034:34;1013:19;;;1006:63;1106:34;1085:19;;;1078:63;1178:34;1157:19;;;1150:63;1250:34;1229:19;;;1222:63;-1:-1:-1;;;1301:19:6;;;1294:33;995:21:2;;974:18;;1571:5;;:19;;1344::6;;1571:271:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1571:271:2;;;;;;;;;;;;:::i;:::-;2136:5;;:35;;-1:-1:-1;;;2136:35:2;;1548:294;;-1:-1:-1;2121:12:2;;-1:-1:-1;;;;;2136:5:2;;;;:26;;:35;;1548:294;;2136:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2121:50;;2189:7;2181:35;;;;-1:-1:-1;;;2181:35:2;;3527:2:6;2181:35:2;;;3509:21:6;3566:2;3546:18;;;3539:30;-1:-1:-1;;;3585:18:6;;;3578:45;3640:18;;2181:35:2;;;;;;;;;2342:21;2521:24;;;2500:113;;;;-1:-1:-1;;;2500:113:2;;3871:2:6;2500:113:2;;;3853:21:6;3910:2;3890:18;;;3883:30;3949:34;3929:18;;;3922:62;-1:-1:-1;;;4000:18:6;;;3993:40;4050:19;;2500:113:2;3669:406:6;1111:123:3;1183:43;;-1:-1:-1;;;;;4244:32:6;;1183:43:3;;;4226:51:6;1167:60:3;;4199:18:6;;1183:43:3;;;-1:-1:-1;;1183:43:3;;;;;;;;;;;;;;-1:-1:-1;;;;;1183:43:3;-1:-1:-1;;;1183:43:3;;;1167:15;:60::i;:::-;1111:123;:::o;181:333::-;275:14;;131:42;405:2;392:16;;251:21;;275:14;392:16;131:42;441:5;430:68;421:77;;358:150;;181:333;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1374:127:6:-;1435:10;1430:3;1426:20;1423:1;1416:31;1466:4;1463:1;1456:15;1490:4;1487:1;1480:15;1506:258;1578:1;1588:113;1602:6;1599:1;1596:13;1588:113;;;1678:11;;;1672:18;1659:11;;;1652:39;1624:2;1617:10;1588:113;;;1719:6;1716:1;1713:13;1710:48;;;-1:-1:-1;;1754:1:6;1736:16;;1729:27;1506:258::o;1769:883::-;1848:6;1901:2;1889:9;1880:7;1876:23;1872:32;1869:52;;;1917:1;1914;1907:12;1869:52;1950:9;1944:16;1979:18;2020:2;2012:6;2009:14;2006:34;;;2036:1;2033;2026:12;2006:34;2074:6;2063:9;2059:22;2049:32;;2119:7;2112:4;2108:2;2104:13;2100:27;2090:55;;2141:1;2138;2131:12;2090:55;2170:2;2164:9;2192:2;2188;2185:10;2182:36;;;2198:18;;:::i;:::-;2273:2;2267:9;2241:2;2327:13;;-1:-1:-1;;2323:22:6;;;2347:2;2319:31;2315:40;2303:53;;;2371:18;;;2391:22;;;2368:46;2365:72;;;2417:18;;:::i;:::-;2457:10;2453:2;2446:22;2492:2;2484:6;2477:18;2532:7;2527:2;2522;2518;2514:11;2510:20;2507:33;2504:53;;;2553:1;2550;2543:12;2504:53;2566:55;2618:2;2613;2605:6;2601:15;2596:2;2592;2588:11;2566:55;:::i;:::-;2640:6;1769:883;-1:-1:-1;;;;;;;1769:883:6:o;2657:381::-;2804:2;2793:9;2786:21;2767:4;2836:6;2830:13;2879:6;2874:2;2863:9;2859:18;2852:34;2895:66;2954:6;2949:2;2938:9;2934:18;2929:2;2921:6;2917:15;2895:66;:::i;:::-;3022:2;3001:15;-1:-1:-1;;2997:29:6;2982:45;;;;3029:2;2978:54;;2657:381;-1:-1:-1;;2657:381:6:o;3043:277::-;3110:6;3163:2;3151:9;3142:7;3138:23;3134:32;3131:52;;;3179:1;3176;3169:12;3131:52;3211:9;3205:16;3264:5;3257:13;3250:21;3243:5;3240:32;3230:60;;3286:1;3283;3276:12;3230:60;3309:5;3043:277;-1:-1:-1;;;3043:277:6:o",
    "linkReferences": {
      "/Users/offshore/kit/Ghost-Contract/src/test/utils/Utils.sol": {
        "utils": [
          {
            "start": 777,
            "length": 20
          }
        ]
      }
    }
  },
  "ast": {
    "absolutePath": "/Users/offshore/kit/Ghost-Contract/src/test/Ghost.t.sol",
    "exportedSymbols": {
      "Callee": [
        27
      ],
      "CheatCodes": [
        173
      ],
      "DSTest": [
        10512
      ],
      "Ghost": [
        153
      ],
      "GhostTest": [
        284
      ],
      "console": [
        8348
      ],
      "utils": [
        8831
      ]
    },
    "id": 285,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 155,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:25:2"
      },
      {
        "absolutePath": "/Users/offshore/kit/Ghost-Contract/src/test/utils/test.sol",
        "file": "./utils/test.sol",
        "id": 156,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 285,
        "sourceUnit": 10513,
        "src": "66:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/offshore/kit/Ghost-Contract/src/Ghost.sol",
        "file": "../Ghost.sol",
        "id": 157,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 285,
        "sourceUnit": 154,
        "src": "93:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/offshore/kit/Ghost-Contract/src/Callee.sol",
        "file": "../Callee.sol",
        "id": 158,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 285,
        "sourceUnit": 28,
        "src": "116:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/offshore/kit/Ghost-Contract/src/test/utils/Console.sol",
        "file": "./utils/Console.sol",
        "id": 159,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 285,
        "sourceUnit": 8349,
        "src": "140:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/offshore/kit/Ghost-Contract/src/test/utils/Utils.sol",
        "file": "./utils/Utils.sol",
        "id": 160,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 285,
        "sourceUnit": 8832,
        "src": "170:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CheatCodes",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 173,
        "linearizedBaseContracts": [
          173
        ],
        "name": "CheatCodes",
        "nameLocation": "209:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "ca669fa7",
            "id": 165,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "prank",
            "nameLocation": "235:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "241:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "240:9:2"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "258:0:2"
            },
            "scope": 173,
            "src": "226:33:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "c88a5e6d",
            "id": 172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deal",
            "nameLocation": "274:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "287:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "279:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "300:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "292:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "278:29:2"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:2"
            },
            "scope": 173,
            "src": "265:52:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 285,
        "src": "199:120:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 174,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10512,
              "src": "343:6:2"
            },
            "id": 175,
            "nodeType": "InheritanceSpecifier",
            "src": "343:6:2"
          }
        ],
        "canonicalName": "GhostTest",
        "contractDependencies": [
          27,
          153
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 284,
        "linearizedBaseContracts": [
          284,
          10512
        ],
        "name": "GhostTest",
        "nameLocation": "330:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 181,
            "mutability": "mutable",
            "name": "cheatCodes",
            "nameLocation": "367:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "356:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$173",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 177,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 176,
                "name": "CheatCodes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 173,
                "src": "356:10:2"
              },
              "referencedDeclaration": 173,
              "src": "356:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$173",
                "typeString": "contract CheatCodes"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 179,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8939,
                  "src": "391:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 178,
                "name": "CheatCodes",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 173,
                "src": "380:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_CheatCodes_$173_$",
                  "typeString": "type(contract CheatCodes)"
                }
              },
              "id": 180,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "380:24:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$173",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 184,
            "mutability": "mutable",
            "name": "ghost",
            "nameLocation": "417:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "411:11:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ghost_$153",
              "typeString": "contract Ghost"
            },
            "typeName": {
              "id": 183,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 182,
                "name": "Ghost",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 153,
                "src": "411:5:2"
              },
              "referencedDeclaration": 153,
              "src": "411:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ghost_$153",
                "typeString": "contract Ghost"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 187,
            "mutability": "mutable",
            "name": "callee",
            "nameLocation": "435:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "428:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Callee_$27",
              "typeString": "contract Callee"
            },
            "typeName": {
              "id": 186,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 185,
                "name": "Callee",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27,
                "src": "428:6:2"
              },
              "referencedDeclaration": 27,
              "src": "428:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Callee_$27",
                "typeString": "contract Callee"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "545:148:2",
              "statements": [
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "ghost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "555:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ghost_$153",
                        "typeString": "contract Ghost"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "563:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ghost_$153_$",
                          "typeString": "function () returns (contract Ghost)"
                        },
                        "typeName": {
                          "id": 193,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 192,
                            "name": "Ghost",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 153,
                            "src": "567:5:2"
                          },
                          "referencedDeclaration": 153,
                          "src": "567:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ghost_$153",
                            "typeString": "contract Ghost"
                          }
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "563:11:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ghost_$153",
                        "typeString": "contract Ghost"
                      }
                    },
                    "src": "555:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ghost_$153",
                      "typeString": "contract Ghost"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "555:19:2"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 198,
                      "name": "callee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "584:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Callee_$27",
                        "typeString": "contract Callee"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "593:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Callee_$27_$",
                          "typeString": "function () returns (contract Callee)"
                        },
                        "typeName": {
                          "id": 200,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 199,
                            "name": "Callee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27,
                            "src": "597:6:2"
                          },
                          "referencedDeclaration": 27,
                          "src": "597:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Callee_$27",
                            "typeString": "contract Callee"
                          }
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "593:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Callee_$27",
                        "typeString": "contract Callee"
                      }
                    },
                    "src": "584:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Callee_$27",
                      "typeString": "contract Callee"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "584:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 210,
                            "name": "ghost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "639:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Ghost_$153",
                              "typeString": "contract Ghost"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Ghost_$153",
                              "typeString": "contract Ghost"
                            }
                          ],
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "631:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "631:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "631:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3939393939393939393939393939393939393939393939393939393939393939393939393939",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "647:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(30 digits omitted)...9999"
                        },
                        "value": "99999999999999999999999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(30 digits omitted)...9999"
                        }
                      ],
                      "expression": {
                        "id": 205,
                        "name": "cheatCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "615:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$173",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 172,
                      "src": "615:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "615:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "615:71:2"
                }
              ]
            },
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "448:68:2",
              "text": "@notice create contract instances and give the ghost contract ETh"
            },
            "functionSelector": "0a9254e4",
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "530:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:2"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:0:2"
            },
            "scope": 284,
            "src": "521:172:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "726:2:2",
              "statements": []
            },
            "id": 220,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "706:2:2"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "726:0:2"
            },
            "scope": 284,
            "src": "699:29:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "762:2:2",
              "statements": []
            },
            "id": 224,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "742:2:2"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:0:2"
            },
            "scope": 284,
            "src": "734:30:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "809:2136:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 232,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "846:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GhostTest_$284",
                              "typeString": "contract GhostTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GhostTest_$284",
                              "typeString": "contract GhostTest"
                            }
                          ],
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "838:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "838:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "838:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8348,
                        "src": "819:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8348_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 389,
                      "src": "819:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "819:33:2"
                },
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "mutability": "mutable",
                      "name": "preBalance",
                      "nameLocation": "982:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 282,
                      "src": "974:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 237,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "974:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@notice First get the balance before the transfer so the balance after the transfer can be verified",
                  "id": 244,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 241,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1003:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GhostTest_$284",
                            "typeString": "contract GhostTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GhostTest_$284",
                            "typeString": "contract GhostTest"
                          }
                        ],
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "995:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "995:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "995:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "995:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "974:42:2"
                },
                {
                  "assignments": [
                    247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "1561:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 282,
                      "src": "1548:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1548:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@notice Create the bytecode payload.\n@notice This simply calls the tryTransfer function, sending an amount of ETH to the passed in address, which is this contract for this test.\n@dev The ghost transaction works by executing the payload during deployment, making the msg.sender 0x0000000000000000000000000000000000000000",
                  "id": 252,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30783766303130613764363530303030303030303030303030303030303030303030303062346337396461623866323539633761656536653562326161373239383231383630303035323766383634323237653834303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303630323035323634303030303030323731303630343035323630303038303630363036303030383035413733623463373964616238663235396337616565366535623261613732393832313836343232376538346631",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1604:228:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8c03cc84af853f2e33d509637945e9f333c67f669ceffc25a33035ef643e4c1",
                          "typeString": "literal_string \"0x7f010a7d65000000000000000000000000b4c79dab8f259c7aee6e5b2aa72982186000527f864227e84000000000000000000000000000000000000000000000000000000060205264000000271060405260008060606000805A73b4c79dab8f259c7aee6e5b2aa729821864227e84f1\""
                        },
                        "value": "0x7f010a7d65000000000000000000000000b4c79dab8f259c7aee6e5b2aa72982186000527f864227e84000000000000000000000000000000000000000000000000000000060205264000000271060405260008060606000805A73b4c79dab8f259c7aee6e5b2aa729821864227e84f1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e8c03cc84af853f2e33d509637945e9f333c67f669ceffc25a33035ef643e4c1",
                          "typeString": "literal_string \"0x7f010a7d65000000000000000000000000b4c79dab8f259c7aee6e5b2aa72982186000527f864227e84000000000000000000000000000000000000000000000000000000060205264000000271060405260008060606000805A73b4c79dab8f259c7aee6e5b2aa729821864227e84f1\""
                        }
                      ],
                      "expression": {
                        "id": 248,
                        "name": "utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8831,
                        "src": "1571:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_utils_$8831_$",
                          "typeString": "type(library utils)"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hexStrToBytes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8830,
                      "src": "1571:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:271:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1548:294:2"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2126:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 282,
                      "src": "2121:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2121:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@notice Send the ghost transaction, this will execute the payload without exposing a msg.sender to the contract that was called\n@notice If the contract were to check the msg.sender, the address would be 0x0000000000000000000000000000000000000000",
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 258,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "2163:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 256,
                        "name": "ghost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "2136:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ghost_$153",
                          "typeString": "contract Ghost"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendGhostTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "2136:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory) external returns (bool)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2121:50:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "2189:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47686f7374207478206661696c6564",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2198:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_849a105871449dc5f681dd1489cbacc12bc8f355cbbe76716cb6e1da4f6b1c05",
                          "typeString": "literal_string \"Ghost tx failed\""
                        },
                        "value": "Ghost tx failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_849a105871449dc5f681dd1489cbacc12bc8f355cbbe76716cb6e1da4f6b1c05",
                          "typeString": "literal_string \"Ghost tx failed\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2181:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:35:2"
                },
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "postBalance",
                      "nameLocation": "2328:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 282,
                      "src": "2320:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2320:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@notice Get the balance after the ghostTransaction to check the change in balance",
                  "id": 274,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 271,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "2350:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GhostTest_$284",
                            "typeString": "contract GhostTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GhostTest_$284",
                            "typeString": "contract GhostTest"
                          }
                        ],
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2342:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2342:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2342:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2320:43:2"
                },
                {
                  "documentation": "@notice Ensure that the balance has increased, meaning that the ghostTransaction executed the payload successfully",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 276,
                          "name": "postBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "2521:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 277,
                          "name": "preBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "2535:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2521:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706f737442616c616e6365206973206e6f742067726561746572207468616e2070726542616c616e6365",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2559:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34b625a0c66d0cb18372c107ee64e0f66f8d1d498d46c557d81987d81ac7399f",
                          "typeString": "literal_string \"postBalance is not greater than preBalance\""
                        },
                        "value": "postBalance is not greater than preBalance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34b625a0c66d0cb18372c107ee64e0f66f8d1d498d46c557d81987d81ac7399f",
                          "typeString": "literal_string \"postBalance is not greater than preBalance\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2500:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:113:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:113:2"
                }
              ]
            },
            "functionSelector": "e4e1a36d",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGhostTransaction",
            "nameLocation": "779:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "799:2:2"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:2"
            },
            "scope": 284,
            "src": "770:2175:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 285,
        "src": "321:2626:2",
        "usedErrors": []
      }
    ],
    "src": "39:2909:2"
  }
}